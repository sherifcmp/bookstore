swagger: '2.0'
info:
  description: APIs provided for Mancala game
  version: 1.0.0
  title: Bol.com - Mancala game API
  contact:
    name: Sherif I. Abdelkhalik
    url: 'https://www.linkedin.com/in/skhaliq/'
    email: sherifcmp@gmail.com
host: 'localhost:8087'
basePath: /api/v1/mancala
tags:
  - name: game-controller
    description: Game Controller
  - name: player-controller
    description: Player Controller
  - name: game-board-controller
    description: Game Board Controller
  - name: basic-error-controller
    description: Basic Error Controller
paths:
  /games/leaderboard:
    get:
      tags:
        - game-controller
      summary: getLeaderBoard
      operationId: getLeaderBoardUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LeaderBoard'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /games/start-game:
    post:
      tags:
        - game-controller
      summary: createGame
      operationId: createGameUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: createGameRequest
          description: createGameRequest
          required: true
          schema:
            $ref: '#/definitions/CreateGameRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Game'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/games/{game-id}/board/make-turn':
    put:
      tags:
        - game-board-controller
      summary: makeTurn
      operationId: makeTurnUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: makeTurnRequest
          description: makeTurnRequest
          required: true
          schema:
            $ref: '#/definitions/MakeTurnRequest'
        - name: game-id
          in: path
          description: game-id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Game'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /players:
    get:
      tags:
        - player-controller
      summary: getPlayers
      operationId: getPlayersUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Player'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - player-controller
      summary: addPlayer
      operationId: addPlayerUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: addPlayerRequest
          description: addPlayerRequest
          required: true
          schema:
            $ref: '#/definitions/AddPlayerRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Player'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/players/{player-id}':
    get:
      tags:
        - player-controller
      summary: getPlayer
      operationId: getPlayerUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: player-id
          in: path
          description: player-id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Player'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - player-controller
      summary: deletePlayer
      operationId: deletePlayerUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: player-id
          in: path
          description: player-id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  LeaderBoardDetail:
    type: object
    properties:
      countOfWins:
        type: integer
        format: int32
      name:
        type: string
  Player:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
  Game:
    type: object
    properties:
      gameBoard:
        $ref: '#/definitions/GameBoard'
      gameStatus:
        type: string
        enum:
          - RUNNING
          - WON
          - DRAW
      id:
        type: integer
        format: int32
      player1:
        $ref: '#/definitions/Player'
      player2:
        $ref: '#/definitions/Player'
      turn:
        $ref: '#/definitions/Player'
      winner:
        $ref: '#/definitions/Player'
  PlayerBoard:
    type: object
    properties:
      largePit:
        $ref: '#/definitions/Pit'
      smallPits:
        type: array
        items:
          $ref: '#/definitions/Pit'
  GameBoard:
    type: object
    properties:
      player1Board:
        $ref: '#/definitions/PlayerBoard'
      player2Board:
        $ref: '#/definitions/PlayerBoard'
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
  Pit:
    type: object
    properties:
      seeds:
        type: integer
        format: int32
      valid:
        type: boolean
  MakeTurnRequest:
    type: object
    properties:
      pitNumber:
        type: integer
        format: int32
      turn:
        $ref: '#/definitions/Player'
  LeaderBoard:
    type: object
    properties:
      leaderboardList:
        type: array
        items:
          $ref: '#/definitions/LeaderBoardDetail'
  View:
    type: object
    properties:
      contentType:
        type: string
  CreateGameRequest:
    type: object
    properties:
      player1:
        $ref: '#/definitions/Player'
      player2:
        $ref: '#/definitions/Player'
  AddPlayerRequest:
    type: object
    properties:
      name:
        type: string
